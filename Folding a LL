class Solution {
    
    
    Node reorderlist(Node head) {
        
        if(head==null) {
         return null;
      }
      
      Node mid=getMiddle(head);
      Node secondhalf=mid.next;
      mid.next=null;
      
      Node t1=head;
      Node t2=Reverse(secondhalf);
      
      while(t1!=null && t2!=null){
          Node nt1=t1.next;
          Node nt2=t2.next;
          
          t1.next=t2;
          t1=nt1;
          
          t2.next=t1;
          t2=nt2;
         
      }
      return head;
    }
    
    
    Node getMiddle(Node head)
    {    
         if(head==null || head.next==null){
             return head;
         }
        
         Node slow=head;
         Node fast=head;
         while(fast!=null && fast.next!=null){
             fast=fast.next.next;
             slow=slow.next;
         }
         return slow;
    }
    
    Node Reverse(Node head){
    
        Node Prev=null;
        Node Next=null;
        Node Current=head;
        while(Current!=null){
            Next=Current.next;
            Current.next=Prev;
            Prev=Current;
            Current=Next;
        }
        
        head=Prev;
        return head;
    }

}
